name: Tests
on: [push, pull_request]
jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ["3.7", "3.8", "3.9", "3.10", "pypy-3.7", "pypy-3.8"]
        experimental: [false]
    defaults:
      run:
        shell: bash
    steps:
        - uses: actions/checkout@v3
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
            cache: 'pip'
        - name: Install Homebrew Packages
          if: ${{ matrix.os == 'MacOS' }}
          run: |
              brew uninstall --ignore-dependencies openblas
              brew install openblas
              brew install lapack
              echo "LDFLAGS=-L/usr/local/opt/lapack/lib;" >> $env:GITHUB_ENV
              echo "CPPFLAGS=-I/usr/local/opt/lapack/include;" >> $env:GITHUB_ENV
              echo "PKG_CONFIG_PATH=/usr/local/opt/lapack/lib/pkgconfig;" >> $env:GITHUB_ENV
              echo "[openblas]" > site.cfg
              echo "libraries = openblas" >> site.cfg
              echo "library_dirs = /usr/local/opt/openblas/lib" >> site.cfg
              echo "include_dirs = /usr/local/opt/openblas/include" >> site.cfg
              echo "runtime_library_dirs = /usr/local/opt/openblas/lib" >> site.cfg
        - name: Install Windows Packages
          if: ${{ matrix.os == 'Windows' }}
          run: |
              choco install rtools --no-progress
              echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH

              # Download and install pre-built OpenBLAS library
              # Built with mingw-w64, -ucrt -static.
              # https://github.com/matthew-brett/openblas-libs/blob/ucrt-build/build_openblas.ps1
              choco install unzip -y
              choco install wget -y
              wget https://github.com/scipy/scipy-ci-artifacts/raw/main/openblas_32_if.zip
              unzip openblas_32_if.zip
              echo "PKG_CONFIG_PATH=c:\opt\openblas\if_32\64\lib\pkgconfig;" >> $env:GITHUB_ENV
              mv opt c:\
        - name: Run Tests
          run: |
              python -m pip install --upgrade pip
              pip install -e.[docs,tests,release]
              python -m pip install --upgrade build
              python -m build
              twine check dist/*
              black --check .
              pytest . --cov --cov-report=term-missing -vv
              coverage report
              coverage html
              coverage xml --ignore-errors
        - name: "Upload coverage to Codecov"
          uses: codecov/codecov-action@v2
          with:
            fail_ci_if_error: true
